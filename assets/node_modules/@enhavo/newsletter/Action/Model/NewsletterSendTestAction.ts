import AbstractAction from "@enhavo/app/Action/Model/AbstractAction";
import * as $ from 'jquery';
import Message from "@enhavo/app/FlashMessage/Message";
import AjaxFormModal from "@enhavo/app/Modal/Model/AjaxFormModal";
import FlashMessenger from "@enhavo/app/FlashMessage/FlashMessenger";
import BatchDataInterface from "@enhavo/app/Grid/Batch/BatchDataInterface";
import Translator from "@enhavo/core/Translator";
import View from "@enhavo/app/View/View";
import Router from "@enhavo/core/Router";
import ModalManager from "@enhavo/app/Modal/ModalManager";
import Grid from "@enhavo/app/Grid/Grid";

export default class NewsletterSendTestAction extends AbstractAction
{
    public email: string;
    public modal: any;
    protected readonly flashMessenger: FlashMessenger;
    protected readonly modalManager: ModalManager;
    protected readonly translator: Translator;

    public constructor(flashMessenger: FlashMessenger, modalManager: ModalManager, translator: Translator) {
        super();
        this.flashMessenger = flashMessenger
        this.modalManager = modalManager;
        this.translator = translator;
    }
    
    execute(): void
    {
        this.modal.data = {
            form: $('form').serialize()
        };
        this.modal.actionHandler = (modal: AjaxFormModal, data: any, error: string) => {
            return new Promise((resolve, reject) => {
                if(data.status == 400) {
                    this.flashMessenger.addMessage(new Message(data.data.type, data.data.message));
                    resolve(false);
                    return;
                } else if(error) {
                    this.flashMessenger.addMessage(new Message(Message.ERROR, this.translator.trans(error)));
                    resolve(false);
                    return;
                }
                this.flashMessenger.addMessage(new Message(data.data.type, data.data.message));
                resolve(true);
            })
        };
        this.modalManager.push(this.modal);
    }
}
