parameters:
    enhavo_shop.controller.user.class: Enhavo\Bundle\ShopBundle\Controller\UserController

services:
    Enhavo\Bundle\ShopBundle\Action\VariantActionType:
        parent: Enhavo\Bundle\AppBundle\Action\Type\OpenActionType
        public: true
        tags:
            - { name: enhavo.action, alias: shop_variant }

    Enhavo\Bundle\ShopBundle\Action\GenerateVariantActionType:
        parent: Enhavo\Bundle\AppBundle\Action\Type\OpenActionType
        public: true
        tags:
            - { name: enhavo.action, alias: shop_generate_variant }

    Enhavo\Bundle\ShopBundle\Action\CreateAttributeAction:
        parent: Enhavo\Bundle\AppBundle\Action\AbstractActionType
        public: true
        tags:
            - { name: enhavo.action, alias: shop_create_attribute }

    Enhavo\Bundle\ShopBundle\Manager\ProductManager:
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@Enhavo\Bundle\ShopBundle\Factory\ProductVariantProxyFactory'

    Enhavo\Bundle\ShopBundle\EventListener\ProductSubscriber:
        arguments:
            - '@Enhavo\Bundle\ShopBundle\Manager\ProductManager'
        tags:
            - { name: kernel.event_subscriber }

    Enhavo\Bundle\ShopBundle\EventListener\ProductVariantSubscriber:
        arguments:
            - '@Enhavo\Bundle\ShopBundle\Manager\ProductManager'
        tags:
            - { name: kernel.event_subscriber }

    Enhavo\Bundle\ShopBundle\EventListener\ProductOptionSubscriber:
        arguments:
            - '@Enhavo\Bundle\ShopBundle\Manager\ProductManager'
            - '@sylius.translation_locale_provider'
        tags:
            - { name: kernel.event_subscriber }

    Enhavo\Bundle\ShopBundle\EventListener\ProductVariantProxyReplaceSubscriber:
        arguments:
            - '@Enhavo\Bundle\ShopBundle\Factory\ProductVariantProxyFactoryInterface'
        tags:
            - { name: doctrine.event_subscriber }

    Enhavo\Bundle\ShopBundle\Factory\ProductVariantProxyFactory:
        arguments:
            - '%enhavo_shop.product.variant_proxy.model%'

    sylius.factory.order_item:
        class: '%sylius.factory.order_item.class%'
        arguments:
            - '%sylius.model.order_item.class%'
            - '@Enhavo\Bundle\ShopBundle\Factory\ProductVariantProxyFactoryInterface'

    Enhavo\Bundle\ShopBundle\Column\AddressType:
        public: true
        calls:
            - [setContainer, ['@service_container']]
        tags:
            - { name: enhavo.column, alias: 'shop_address' }

    Enhavo\Bundle\ShopBundle\Address\AddressProviderInterface:
        alias: Enhavo\Bundle\ShopBundle\Address\UserAddressProvider

    Enhavo\Bundle\ShopBundle\Address\UserAddressProvider:
        arguments:
            - '@security.token_storage'
            - '@doctrine.orm.entity_manager'
            - '@sylius.factory.address'

#    enhavo_shop.listener.doctrine_sylius_meta:
#        class: Enhavo\Bundle\ShopBundle\EventListener\DoctrineSyliusMetaListener
#        tags:
#            - { name: doctrine.event_subscriber, connection: default }
#
#    enhavo_shop.locale.country_resolver:
#        class: Enhavo\Bundle\ShopBundle\Locale\CountryResolver
#        arguments:
#            - '@sylius.repository.country'
#
#    enhavo.token_generator:
#        class: Sylius\Component\User\Security\Generator\TokenGenerator

#    Enhavo\Bundle\ShopBundle\Button\BillingButton:
#        public: true
#        calls:
#            - [setContainer, ['@service_container']]
#        tags:
#            - { name: enhavo.button, alias: shop_billing }
#
#    Enhavo\Bundle\ShopBundle\Button\PackingSlipButton:
#        public: true
#        calls:
#            - [setContainer, ['@service_container']]
#        tags:
#            - { name: enhavo.button, alias: shop_packing_slip }

#    enhavo_shop.document.manager:
#        class: Enhavo\Bundle\ShopBundle\Document\DocumentManager
#        calls:
#            - [setContainer, ['@service_container']]
#
#    sylius.invoice_number_generator:
#        class: Enhavo\Bundle\ShopBundle\Document\InvoiceNumberGenerator
#
#    enhavo_shop.twig.country:
#        class: Enhavo\Bundle\ShopBundle\Twig\Country
#        tags:
#            - { name: twig.extension }
#
#    enhavo_shop.controller.user:
#        class: '%enhavo_shop.controller.user.class%'
#        arguments:
#            - '@sylius.resource_controller.request_configuration_factory'
#            - '@Enhavo\Component\Type\FactoryInterface[View]'
#            - '@fos_rest.view_handler'
#        calls:
#            - [setContainer, ['@service_container']]
#
#    enhavo_shop.factory.voucher:
#        class: '%enhavo_shop.factory.voucher.class%'
#        arguments:
#            - '%enhavo_shop.model.voucher.class%'
#        calls:
#            - [setContainer, ['@service_container']]
#
#    enhavo_shop.manager.voucher_manager:
#        class: Enhavo\Bundle\ShopBundle\Manager\VoucherManager
#        calls:
#            - [setContainer, ['@service_container']]
#
#    enhavo_shop.manager.coupon:
#        class: Enhavo\Bundle\ShopBundle\Manager\CouponManager
#        calls:
#            - [setContainer, ['@service_container']]
