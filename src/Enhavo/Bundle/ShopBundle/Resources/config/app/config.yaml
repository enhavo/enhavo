cmf_routing:
    dynamic:
        controllers_by_class:
            Enhavo\Bundle\ShopBundle\Entity\Product: sylius.controller.product:showResourceAction

sylius_order:
    resources:
        order:
            classes:
                model: Enhavo\Bundle\ShopBundle\Entity\Order
                controller: Enhavo\Bundle\ShopBundle\Controller\OrderController
                repository: Enhavo\Bundle\ShopBundle\Repository\OrderRepository
                form: Enhavo\Bundle\ShopBundle\Form\Type\OrderType
        order_item:
            classes:
                model: Enhavo\Bundle\ShopBundle\Entity\OrderItem

sylius_shipping:
    resources:
        shipment:
            classes:
                model: Enhavo\Bundle\ShopBundle\Entity\Shipment

sylius_money: ~

sylius_addressing:
    driver: doctrine/orm

sylius_promotion:
    driver: doctrine/orm
    resources:
        promotion_subject:
            classes:
                model: "%sylius.model.order.class%"

        promotion:
            classes:
                model: Enhavo\Bundle\ShopBundle\Entity\Promotion

payum:
    security:
        token_storage:
            Enhavo\Bundle\ShopBundle\Entity\PaymentToken: { doctrine: orm }

    storages:
        Enhavo\Bundle\ShopBundle\Entity\Payment: { doctrine: orm }

    gateways:
        offline:
            factory: offline

#    storages:
#        "%sylius.model.order.class%": { doctrine: orm }
#        "%sylius.model.payment.class%": { doctrine: orm }
#
#    security:
#        token_storage:
#            Sylius\Bundle\PayumBundle\Model\PaymentSecurityToken: { doctrine: orm }
#
#    dynamic_gateways:
#        config_storage:
#            Sylius\Bundle\PayumBundle\Model\GatewayConfig: { doctrine: orm }
#
#    gateways_v2:
#        paypal_express_checkout:
#            factory: paypal_express_checkout_nvp
#            username: "%paypal.express_checkout.username%"
#            password: "%paypal.express_checkout.password%"
#            signature: "%paypal.express_checkout.signature%"
#            sandbox: "%paypal.express_checkout.sandbox%"
#
#    gateways:
#        offline:
#            offline: ~

sylius_payment:
    gateways:
        offline: Offline
        paypal_express_checkout: Paypal Express Checkout

doctrine:
    orm:
        resolve_target_entities:
            Sylius\Component\Addressing\Model\AddressInterface: Sylius\Component\Addressing\Model\Address
            Sylius\Component\Promotion\Model\PromotionCouponInterface: Sylius\Component\Promotion\Model\PromotionCoupon
            Sylius\Component\Payment\Model\PaymentInterface: Sylius\Component\Payment\Model\Payment
            Sylius\Component\Shipping\Model\ShipmentInterface: Enhavo\Bundle\ShopBundle\Entity\Shipment
            Sylius\Component\Taxation\Model\TaxRateInterface: Sylius\Component\Taxation\Model\TaxRate
            Sylius\Component\Promotion\Model\PromotionInterface: Enhavo\Bundle\ShopBundle\Entity\Promotion
            Enhavo\Bundle\ShopBundle\Model\ProductInterface: Enhavo\Bundle\ShopBundle\Entity\Product
            Enhavo\Bundle\ShopBundle\Model\OrderInterface: Enhavo\Bundle\ShopBundle\Entity\Order
            Sylius\Component\Product\Model\ProductOptionInterface: Sylius\Component\Product\Model\ProductOption
            Sylius\Component\Product\Model\ProductAssociationInterface: Enhavo\Bundle\ShopBundle\Entity\ProductAssociation

enhavo_app:
    template_paths:
        enhavo_shop:
            path: '@EnhavoShopBundle/Resources/views'
            priority: 10
    roles:
        enhavo_shop_product_index:
            role: ROLE_ENHAVO_SHOP_PRODUCT_INDEX
            label: product.role.label.index
            translation_domain: EnhavoShopBundle
        enhavo_shop_product_create:
            role: ROLE_ENHAVO_SHOP_PRODUCT_CREATE
            label: product.role.label.create
            translation_domain: EnhavoShopBundle
        enhavo_shop_product_update:
            role: ROLE_ENHAVO_SHOP_PRODUCT_UPDATE
            label: product.role.label.update
            translation_domain: EnhavoShopBundle
        enhavo_shop_product_delete:
            role: ROLE_ENHAVO_SHOP_PRODUCT_DELETE
            label: product.role.label.delete
            translation_domain: EnhavoShopBundle

        enhavo_shop_order_index:
            role: ROLE_ENHAVO_SHOP_ORDER_INDEX
            label: order.role.label.index
            translation_domain: EnhavoShopBundle
        enhavo_shop_order_create:
            role: ROLE_ENHAVO_SHOP_ORDER_CREATE
            label: order.role.label.create
            translation_domain: EnhavoShopBundle
        enhavo_shop_order_update:
            role: ROLE_ENHAVO_SHOP_ORDER_UPDATE
            label: order.role.label.update
            translation_domain: EnhavoShopBundle
        enhavo_shop_order_delete:
            role: ROLE_ENHAVO_SHOP_ORDER_DELETE
            label: order.role.label.delete
            translation_domain: EnhavoShopBundle
            
        enhavo_shop_voucher_index:
            role: ROLE_ENHAVO_SHOP_VOUCHER_INDEX
            label: voucher.role.label.index
            translation_domain: EnhavoShopBundle
        enhavo_shop_voucher_create:
            role: ROLE_ENHAVO_SHOP_VOUCHER_CREATE
            label: voucher.role.label.create
            translation_domain: EnhavoShopBundle
        enhavo_shop_voucher_update:
            role: ROLE_ENHAVO_SHOP_VOUCHER_UPDATE
            label: voucher.role.label.update
            translation_domain: EnhavoShopBundle
        enhavo_shop_voucher_delete:
            role: ROLE_ENHAVO_SHOP_VOUCHER_DELETE
            label: voucher.role.label.delete
            translation_domain: EnhavoShopBundle

enhavo_shop:
    mailer:
        confirm:
            from: '%env(string:MAILER_FROM)%'
            sender_name: '%env(string:MAILER_NAME)%'
        tracking:
            from: '%env(string:MAILER_FROM)%'
            sender_name: '%env(string:MAILER_NAME)%'
        notification:
            from: '%env(string:MAILER_FROM)%'
            sender_name: '%env(string:MAILER_NAME)%'
            to: '%env(string:MAILER_TO)%'

enhavo_routing:
    classes:
        Enhavo\Bundle\ShopBundle\Entity\Product:
            router:
                default:
                    type: routable
                admin:
                    type: id
                    route: enhavo_shop_product_update
            generators:
                prefix:
                    type: prefix
                    properties: title

jms_serializer:
    metadata:
        directories:
            EnhavoShopBundle:
                namespace_prefix: "Enhavo\\Bundle\\ShopBundle"
                path: "@EnhavoShopBundle/Resources/config/serializer"

sylius_inventory:
    resources:

sylius_product:
    resources:
        product:
            classes:
                controller: Enhavo\Bundle\ShopBundle\Controller\ProductController
                model: Enhavo\Bundle\ShopBundle\Entity\Product
                repository: Enhavo\Bundle\ShopBundle\Repository\ProductRepository
                form: Enhavo\Bundle\ShopBundle\Form\Type\ProductType
        product_option:
            classes:
                model: Enhavo\Bundle\ShopBundle\Entity\ProductOption
                form: Enhavo\Bundle\ShopBundle\Form\Type\ProductOptionType
        product_variant:
            classes:
                model: Enhavo\Bundle\ShopBundle\Entity\ProductVariant
                form: Enhavo\Bundle\ShopBundle\Form\Type\ProductVariantType
                controller: Enhavo\Bundle\ShopBundle\Controller\ProductVariantController
                repository: Enhavo\Bundle\ShopBundle\Repository\ProductVariantRepository
        product_association:
            classes:
                model: Enhavo\Bundle\ShopBundle\Entity\ProductAssociation
                form: Enhavo\Bundle\ShopBundle\Form\Type\ProductAssociationType
        product_association_type:
            classes:
                model: Enhavo\Bundle\ShopBundle\Entity\ProductAssociationType
                repository: Enhavo\Bundle\ShopBundle\Repository\ProductAssociationTypeRepository
                controller: Enhavo\Bundle\AppBundle\Controller\ResourceController
                form: Enhavo\Bundle\ShopBundle\Form\Type\ProductAssociationTypeType

sylius_taxation:
    resources:
        tax_category:
            classes:
                model: Enhavo\Bundle\ShopBundle\Entity\TaxCategory
                controller: Enhavo\Bundle\AppBundle\Controller\ResourceController
                form: Enhavo\Bundle\ShopBundle\Form\Type\TaxCategoryType
        tax_rate:
            classes:
                model: Enhavo\Bundle\ShopBundle\Entity\TaxRate
                controller: Enhavo\Bundle\AppBundle\Controller\ResourceController
                form: Enhavo\Bundle\ShopBundle\Form\Type\TaxRateType

#winzou_state_machine:
#    sylius_payment:
#        class: "%sylius.model.payment.class%"
#        property_path: state
#        graph: sylius_payment
#        state_machine_class: "%sylius.state_machine.class%"
#        states:
#            new: ~
#            unknown: ~
#            pending: ~
#            processing: ~
#            completed: ~
#            failed: ~
#            cancelled: ~
#            void: ~
#            refunded: ~
#        transitions:
#            create:
#                from: [new]
#                to: pending
#            process:
#                from: [new, pending]
#                to: processing
#            complete:
#                from: [new, pending, processing]
#                to: completed
#            fail:
#                from: [new, pending, processing]
#                to: failed
#            cancel:
#                from: [new, pending, processing]
#                to: cancelled
#            refund:
#                from: [completed]
#                to: refunded
#            void:
#                from: [new, pending]
#                to: void