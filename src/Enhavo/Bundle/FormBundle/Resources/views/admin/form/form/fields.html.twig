{% extends 'form_div_layout.html.twig' %}

{% block enhavo_datetime_widget -%}
    <div class="input-container">
        <input class="datetimepicker" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}"{% endif %} type="text" />
    </div>
{%- endblock %}

{% block enhavo_date_widget -%}
    <div class="input-container">
        <input class="datepicker" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}"{% endif %} type="text" />
    </div>
{%- endblock %}

{% block choice_widget_expanded %}
    {% if list %}<div class="choice-list">{% endif %}
        <div class="choice-input-container" {{ block('widget_container_attributes') }}>
            {%- for child in form %}
                <span class="choice-input-with-label">
                {{- form_widget(child) -}}
                {{- form_label(child) -}}
            </span>
            {% endfor -%}
        </div>
    {% if list %}</div>{% endif %}
{% endblock %}

{% block form_row %}
    {% spaceless %}
        <div class="form-row {% if not valid %}has-error{% endif %}" data-form-row {% if not valid %}data-form-error{% endif %}>
            <div class="label-help-container">
                <div class="label">{{ form_label(form) }}</div>
                {% if help %}
                    <div class="help-container">
                        <i data-help-text class="help-icon icon icon-help"></i>
                        <div class="help-text" data-help-text>{{ help|trans({}, translation_domain) }}</div>
                    </div>
                {% endif %}
            </div>
            <div class="formwidget-container" data-formwidget-container>
                {{ form_widget(form) }}
            </div>
            {{ form_errors(form) }}
        </div>
    {% endspaceless %}
{% endblock %}

{% block text_widget %}
    <input {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}"{% endif %} type="text" />
{% endblock %}

{% block textarea_widget %}
    <textarea {{ block('widget_attributes') }}>{{ value }}</textarea>
{% endblock %}

{% block password_widget %}
    <div class="input-container">
        <input {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}"{% endif %} type="password" />
    </div>
{% endblock %}

{% block enhavo_wysiwyg_widget %}
    <div class="wysiwyg-container">
        <textarea data-editor-css="{{ editor_css|json_encode|e }}" data-wysiwyg="{{ config }}" {{ block('widget_attributes') }}>{{ value }}</textarea>
    </div>
{% endblock %}

{% block enhavo_list_widget %}
    {% import _self as forms %}
    <div data-list class="list-type">
        <ul
            data-list-container
            {% if sortable %} data-order="{{ sortable_property }}"{% endif %}
            data-prototype="{% if form.vars.prototype is defined %}{{ forms.input(sortable, border, allow_delete, null, null, form_widget(form.vars.prototype))|e }}{% endif %}"
            data-prototype-name="{{ prototype_name }}"
            class="list-fields{% if border %} border{% endif %}{% if sortable %} sortable{% endif %}{% if allow_delete %} delete{% endif %}"
            data-reindexable
            {{ block('widget_attributes') }}>
            {% for item in form.children %}
                {{ forms.input(sortable, border, allow_delete, null, null, form_widget(item))|raw }}
            {% endfor %}
        </ul>

        {% if allow_add %}
            <div class="list-add-button-row" data-add-button>
                <div class="list-add-button"><i class="icon icon-add_box"></i> hinzuf√ºgen</div>
            </div>
        {% endif %}
    </div>
{% endblock %}

{% macro input(sortable, border, allow_delete, block_name, name, form_widget) %}
    <li class="listElement" data-list-item>
        {% if sortable or allow_delete %}
            {% spaceless %}
                <ul class="buttons-container" data-list-item-buttons>
                    {% if sortable %}
                        <li class="button button-down" data-list-item-down><i class="icon icon-arrow_downward"></i></li>
                        <li class="button button-up" data-list-item-up><i class="icon icon-arrow_upward"></i></li>
                    {% endif %}
                    {% if allow_delete %}
                        <li class="button button-delete" data-list-item-delete>
                            <i class="icon icon-close"></i>
                        </li>
                    {% endif %}
                </ul>
            {% endspaceless %}
        {% endif %}
        {% if block_name or name %}
            <div class="block-name">{% if block_name %}{{ block_name|nl2br }}{% else %}{{ name|nl2br }}{% endif %}</div>
        {% endif %}
        {{ form_widget|raw }}
    </li>
{% endmacro %}

{% block enhavo_message_widget %}
    <div class="form-message-box type-{{ type }}">
        {{ message|nl2br }}
    </div>
{% endblock %}

{% block email_widget %}
    <div class="input-container">
        <input {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}"{% endif %} type="text" />
    </div>
{% endblock %}

{% block integer_widget %}
    <div class="input-container">
        <input {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}"{% endif %} type="text" />
    </div>
{% endblock %}

{% block number_widget %}
    <div class="input-container">
        <input {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}"{% endif %} type="text" />
    </div>
{% endblock %}

{% block entity_label %}
    {{ block('form_label') }}{% if multiple is defined and count is defined and multiple and count %}&nbsp;<span data-selected-count>({{ data|length }})</span>{% endif %}
{% endblock %}

{% block enhavo_auto_complete_entity_widget %}
    <div data-auto-complete-entity="{{ auto_complete_data|json_encode|e }}">
        {% set valueString = '' %}
        {% if multiple %}
            {% set valueValues = [] %}
            {% for arr in value %}
                {% set valueValues = valueValues|merge([arr.id]) %}
            {% endfor %}
            {% set valueString = valueValues|join(",") %}
        {% else %}
            {% set valueString = value %}
        {% endif %}
        <input type="hidden" name="{{ full_name }}" value="{{ valueString }}" {% if multiple %}multiple="multiple"{% endif %} data-auto-complete-input />
        {% for action in actions %}
            <a href="{{ action.url }}" data-auto-complete-action="{{ action|json_encode|e }}" class="autocomplete-action-button btn has-symbol">{% if action.label %}{{ action.label }}{% endif %} <i aria-hidden="true" class="icon icon-{{action.icon}}"></i></a>
        {% endfor %}
    </div>
{% endblock %}

{% block enhavo_auto_complete_entity_label %}
    {{ block('entity_label') }}
{% endblock %}

{% block entity_tree_widget %}
    {% import _self as forms %}
    {% if expanded %}
        <div {{ block('widget_container_attributes') }}>
            {% for choice in choice_tree_builder.choices %}
                {{ forms.choice_view(choice, choice_translation_domain, children_container_class) }}
            {% endfor %}
        </div>
    {% else %}
        {{- block('choice_widget_collapsed') -}}
    {% endif %}
{% endblock %}

{% macro choice_view(choice, choice_translation_domain, children_container_class) %}
    {% import _self as forms %}
    <div>
        <div>
            {{ form_widget(choice.formView) }}
            {{ form_label(choice.formView, null, {translation_domain: choice_translation_domain}) }}
        </div>
        {% if choice.children|length > 0 %}
            <div class="{{ children_container_class }}">
                {% for child in choice.children %}
                    {{ forms.choice_view(child, choice_translation_domain, children_container_class) }}
                {% endfor %}
            </div>
        {% endif %}
    </div>
{% endmacro %}

{%- block choice_widget_options -%}
    {% for group_label, choice in options %}
        {%- if choice is iterable -%}
            <optgroup label="{{ choice_translation_domain is same as(false) ? group_label : group_label|trans({}, choice_translation_domain) }}">
                {% set options = choice %}
                {{- block('choice_widget_options') -}}
            </optgroup>
        {%- else -%}
            <option value="{{ choice.value }}"{% if choice.attr %} {% set attr = choice.attr %}{{ block('attributes') }}{% endif %}{% if choice is selectedchoice(value) %} selected="selected"{% endif %}>{% if choice.level is defined %}{% for i in range(0, choice.level) %}&nbsp;&nbsp;{% endfor %}{% endif %}{{ choice_translation_domain is same as(false) ? choice.label : choice.label|trans({}, choice_translation_domain) }}</option>
        {%- endif -%}
    {% endfor %}
{%- endblock choice_widget_options -%}

{%- block form_errors -%}
    {%- if errors|length > 0 -%}
        <ul class="form-errors">
            {%- for error in errors -%}
                <li>{{ error.message }}</li>
            {%- endfor -%}
        </ul>
    {%- endif -%}
{%- endblock form_errors -%}

{% block head_line_widget %}
    <div class="head-line-widget">
        {% spaceless %}
            <div class="head-line-widget-text">
                {{ form_widget(form.text) }}
            </div>
            <div class="head-line-widget-tag">
                {{ form_widget(form.tag) }}
            </div>
        {% endspaceless %}
    </div>
{% endblock %}

{% block enhavo_poly_collection_widget %}
    {% import _self as helper %}
    <div class="enhavo-poly-collection"
         data-poly-collection
         data-poly-collection-add-button-template="{{ helper.addPolyCollectionButton()|e }}"
         data-poly-collection-config="{{ poly_collection_config|json_encode|e }}"
         data-poly-collection-item-template="{{ helper.addPolyCollectionItem(null, '__label__', null)|e }}"
        {{ block('attributes') }}
    >
        {{ form_prototypes() }}

        <div class="poly-collection-actions" data-poly-collection-action>
            <div class="button" data-poly-collection-action-collapse-all>
                <i class="icon icon-unfold_less"></i>
            </div>
            <div class="button" data-poly-collection-action-expand-all>
                <i class="icon icon-unfold_more"></i>
            </div>
        </div>

        <div class="poly-collection-menu-dialogue" data-poly-collection-menu>
            <ul class="item-list" data-poly-collection-menu-container="{{ '<li data-poly-collection-menu-item="__key__">__label__</li>'|e }}"></ul>
        </div>

        <div class="poly-collection-container" data-reindexable data-poly-collection-container>
            {{ helper.addPolyCollectionButton() }}
            {% for item in form.children|filter(child => child.vars.name != '_token') %}
                {{ helper.addPolyCollectionItem(item, item.vars.label, item.vars.translation_domain) }}
                {{ helper.addPolyCollectionButton() }}
            {% endfor %}
        </div>
    </div>
{% endblock %}

{% macro addPolyCollectionItem(item, label, translation_domain) %}
    <div class="poly-collection-item" data-poly-collection-item>
        <div class="button-container" data-poly-collection-item-action>
            <div class="button button-up" data-poly-collection-item-action-up>
                <i class="icon icon-keyboard_arrow_up"></i>
            </div>
            <div class="button button-down" data-poly-collection-item-action-down>
                <i class="icon icon-keyboard_arrow_down"></i>
            </div>
            <div class="button button-delete" data-poly-collection-item-action-remove>
                <i class="icon icon-close"></i>
            </div>
            <div class="button button-collapse" data-poly-collection-item-action-collapse>
                <i class="icon icon-unfold_less"></i>
            </div>
            <div class="button button-expand" data-poly-collection-item-action-expand>
                <i class="icon icon-unfold_more"></i>
            </div>
            <div class="label">{{ label|trans({}, translation_domain)|nl2br }}</div>
        </div>

        <div class="poly-collection-item-content-container" data-poly-collection-item-container>
            {% if item %}
                {{ form_widget(item) }}
            {% endif %}
        </div>
    </div>
{% endmacro %}

{% macro addPolyCollectionButton() %}
    <div class="poly-collection-item-add-button-row" data-poly-collection-add-button>
        <div class="label"><i class="icon icon-add"></i> <span>{{ 'poly_collection.action.add_block'|trans({}, 'EnhavoFormBundle') }}</span></div>
    </div>
{% endmacro %}


