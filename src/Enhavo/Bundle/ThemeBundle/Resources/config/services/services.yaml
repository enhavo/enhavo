services:
    enhavo_theme.theme.manager:
        class: Enhavo\Bundle\ThemeBundle\Theme\ThemeManager
        public: true
        arguments:
            - '%enhavo_theme.themes_dir%'
            - '@serializer'
            - '@file_locator'
            - '%enhavo_theme.dynamic.enable%'
            - '%enhavo_theme.theme%'
            - '@enhavo_theme.repository.theme'
            - '%enhavo_theme.webpack.custom_file%'

    Enhavo\Bundle\ThemeBundle\Init\InitTheme:
        public: true
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@enhavo_theme.theme.manager'
            - '%enhavo_theme.dynamic.enable%'
            - '@enhavo_theme.factory.theme'
            - '@enhavo_theme.repository.theme'
        calls:
            - ['setContainer', ['@service_container']]
        tags:
            - { name: enhavo.init, alias: 'theme' }

    Enhavo\Bundle\ThemeBundle\Menu\ThemeMenuType:
        parent: Enhavo\Bundle\AppBundle\Menu\Menu\BaseMenu
        tags:
            - { name: enhavo.menu, alias: 'theme' }

    Enhavo\Bundle\ThemeBundle\Form\Type\ThemeType:
        arguments:
            - '%enhavo_theme.model.theme.class%'

    Enhavo\Bundle\ThemeBundle\EventListener\ThemeSaveListener:
        arguments:
            - '@enhavo_theme.repository.theme'
            - '%enhavo_theme.dynamic.enable%'
        tags:
            - { name: kernel.event_listener, event: enhavo_app.pre_update, method: onSave }

    Enhavo\Bundle\ThemeBundle\EventListener\ThemeDoctrineSubscriber:
        calls:
            - [ setContainer, ['@service_container']]
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    Enhavo\Bundle\ThemeBundle\EventListener\ThemeRegisterSubscriber:
        arguments:
            - '@enhavo_theme.theme.manager'
            - '@enhavo_app.template.manager'
        tags:
            - { name: kernel.event_subscriber }

    Enhavo\Bundle\ThemeBundle\Command\ThemeDebugCommand:
        arguments:
            - '@enhavo_theme.theme.manager'
        tags:
            - { name: console.command }

    Enhavo\Bundle\ThemeBundle\Command\WebpackBuildCommand:
        calls:
            - ['setContainer', ['@service_container']]
        tags:
            - { name: console.command }

    Enhavo\Bundle\ThemeBundle\Theme\ThemeWebpackBuildResolver:
        arguments:
            - '@enhavo_theme.theme.manager'

    Enhavo\Bundle\ThemeBundle\Controller\ThemeController:
        public: true
        calls:
            - ['setContainer', ['@service_container']]
        tags:
            - { name: 'controller.service_arguments' }