services:
    Enhavo\Bundle\AppBundle\Endpoint\Type\ViewEndpointType:
        arguments:
            - '@twig'
            - '@Enhavo\Bundle\AppBundle\Template\TemplateResolverInterface'
        tags:
            - { name: enhavo_api.endpoint }

    Enhavo\Bundle\AppBundle\Endpoint\Type\TemplateEndpointType:
        arguments:
            - '@Enhavo\Bundle\AppBundle\Endpoint\Template\Loader'
            - '@Enhavo\Bundle\AppBundle\Endpoint\Template\ExpressionLanguage\TemplateExpressionLanguageEvaluator'
        tags:
            - { name: enhavo_api.endpoint }

    Enhavo\Bundle\AppBundle\Endpoint\Extension\RouterEndpointExtensionType:
        arguments:
            - '@Enhavo\Bundle\AppBundle\Twig\TwigRouter'
            - '@Enhavo\Bundle\AppBundle\Routing\RouteCollectorInterface'
        calls:
            - [ setContainer, [ '@Psr\Container\ContainerInterface' ] ]
        tags:
            - { name: enhavo_api.endpoint_extension }
            - { name: container.service_subscriber }

    Enhavo\Bundle\AppBundle\Endpoint\Type\AreaEndpointType:
        arguments:
            - '@twig'
        calls:
            - [ setContainer, [ '@Psr\Container\ContainerInterface' ] ]
        tags:
            - { name: enhavo_api.endpoint }
            - { name: container.service_subscriber }

    Enhavo\Bundle\AppBundle\Endpoint\Type\VueRoutesEndpointType:
        arguments:
            - '@Enhavo\Bundle\AppBundle\Vue\RouteProvider\VueRouteProviderInterface'
        calls:
            - [ setContainer, [ '@Psr\Container\ContainerInterface' ] ]
        tags:
            - { name: enhavo_api.endpoint }
            - { name: container.service_subscriber }

    enhavo_app.endpoint.template_expression_language:
        class: Symfony\Component\ExpressionLanguage\ExpressionLanguage

    Enhavo\Bundle\AppBundle\Endpoint\Template\ExpressionLanguage\TemplateExpressionLanguageEvaluator:
        arguments:
            - '@enhavo_app.endpoint.template_expression_language'

    Enhavo\Bundle\AppBundle\Endpoint\Template\Loader:
        arguments:
            - '%kernel.project_dir%/data'
            - '@Enhavo\Bundle\AppBundle\Endpoint\Template\ExpressionLanguage\TemplateExpressionLanguageEvaluator'

    Enhavo\Bundle\AppBundle\Endpoint\Template\TemplateEndpointCollector:
        arguments:
            - '@router'

    Enhavo\Bundle\AppBundle\Endpoint\Template\ExpressionLanguage\LoremIpsumGenerator:

    Enhavo\Bundle\AppBundle\Endpoint\Template\ExpressionLanguage\LoadFunctionProvider:
        arguments:
            - '@Enhavo\Bundle\AppBundle\Endpoint\Template\Loader'
        tags:
            - { name: enhavo_app.endpoint.expression_language }

    Enhavo\Bundle\AppBundle\Endpoint\Template\ExpressionLanguage\LoremIpsumFunctionProvider:
        arguments:
            - '@Enhavo\Bundle\AppBundle\Endpoint\Template\ExpressionLanguage\LoremIpsumGenerator'
        tags:
            - { name: enhavo_app.endpoint.expression_language }

    Enhavo\Bundle\AppBundle\Endpoint\Template\ExpressionLanguage\RefFunctionProvider:
        arguments:
            - '@Enhavo\Bundle\AppBundle\Endpoint\Template\Loader'
        tags:
            - { name: enhavo_app.endpoint.expression_language }

    Enhavo\Bundle\AppBundle\Endpoint\Template\ExpressionLanguage\UrlFunctionProvider:
        arguments:
            - '%enhavo_app.endpoint.template_url_prefix%'
        tags:
            - { name: enhavo_app.endpoint.expression_language }

    Enhavo\Bundle\AppBundle\Endpoint\Extension\VueRouteEndpointExtensionType:
        arguments:
            - '@Enhavo\Bundle\AppBundle\Vue\RouteProvider\VueRouteProviderInterface'
        calls:
            - [ setContainer, [ '@Psr\Container\ContainerInterface' ] ]
        tags:
            - { name: enhavo_api.endpoint_extension }
            - { name: container.service_subscriber }

    Enhavo\Bundle\AppBundle\Endpoint\Extension\TranslationEndpointExtensionType:
        arguments:
            - '@enhavo_app.translation.translation_dumper'
            - '@enhavo_app.locale_resolver'
        calls:
            - [ setContainer, [ '@Psr\Container\ContainerInterface' ] ]
        tags:
            - { name: enhavo_api.endpoint_extension }
            - { name: container.service_subscriber }