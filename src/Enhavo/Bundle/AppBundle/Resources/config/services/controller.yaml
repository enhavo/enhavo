services:
    Enhavo\Bundle\AppBundle\Controller\LoginController:
        arguments:
            - '@router'
            - '%enhavo_app.login.route%'
            - '%enhavo_app.login.route_parameters%'
        calls:
            - [setContainer, ['@Psr\Container\ContainerInterface']]
        tags:
            - { name: controller.service_arguments }

    Enhavo\Bundle\AppBundle\Controller\MainController:
        arguments:
            - '@enhavo_app.menu.manager'
            - '@Enhavo\Bundle\AppBundle\Toolbar\ToolbarManager'
            - '%kernel.project_dir%'
            - '%enhavo_app.branding%'
            - '%enhavo_app.toolbar_widget.primary%'
            - '%enhavo_app.toolbar_widget.secondary%'
            - '@enhavo_app.locale_resolver'
            - '@enhavo_app.translation.translation_dumper'
        calls:
            - [setContainer, ['@Psr\Container\ContainerInterface']]
            - [setTemplateResolver, ['@Enhavo\Bundle\AppBundle\Template\TemplateResolverInterface']]
        tags:
            - { name: controller.service_arguments }

    Enhavo\Bundle\AppBundle\Controller\AbstractViewController:
        abstract: true
        arguments:
            - '@Enhavo\Component\Type\FactoryInterface[View]'
        calls:
            - [setContainer, ['@service_container']]

    enhavo_app.controller.modal:
        public: true
        alias: Enhavo\Bundle\AppBundle\Controller\ModalController

    Enhavo\Bundle\AppBundle\Controller\ModalController:
        calls:
            - [setContainer, ['@Psr\Container\ContainerInterface']]
            - [setTemplateResolver, ['@Enhavo\Bundle\AppBundle\Template\TemplateResolverInterface']]
        tags:
            - { name: controller.service_arguments }
