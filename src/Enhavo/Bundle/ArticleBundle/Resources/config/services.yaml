services:
    Enhavo\Bundle\ArticleBundle\Form\Type\ArticleType:
        arguments:
            - '%enhavo_article.article.model.class%'
            - [default]
        tags:
            - { name: form.type, alias: enhavo_article_article }

    Enhavo\Bundle\ArticleBundle\Menu\ArticleRootMenuType:
        tags:
            - { name: enhavo_app.menu }

    Enhavo\Bundle\ArticleBundle\Menu\ArticleMenuType:
        tags:
            - { name: enhavo_app.menu }

    Enhavo\Bundle\ArticleBundle\Menu\TagMenuType:
        tags:
            - { name: enhavo_app.menu }

    Enhavo\Bundle\ArticleBundle\Menu\CategoryMenuType:
        tags:
            - { name: enhavo_app.menu }

    Enhavo\Bundle\ArticleBundle\Block\ArticleListBlockType:
        arguments:
            - '@enhavo_article.article.repository'
            - '@serializer'
        tags:
            - { name: enhavo_block.block }

    Enhavo\Bundle\ArticleBundle\Block\ArticleTeaserBlockType:
        tags:
            - { name: enhavo_block.block }

    enhavo_article.article.factory:
        class: '%enhavo_article.article.factory.class%'
        arguments:
            - '%enhavo_article.article.model.class%'
            - '@enhavo_block.node.factory'
            - '@enhavo_routing.route.factory'
            - '@enhavo_media.file.factory'

    Enhavo\Bundle\ArticleBundle\Vue\ArticleVueRouteProviderType:
        tags:
            - { name: enhavo_app.vue_route_provider }

    Enhavo\Bundle\ArticleBundle\Endpoint\ArticleEndpointType:
        arguments:
            - '@enhavo_article.article.repository'
            - '@Enhavo\Bundle\CommentBundle\Comment\CommentManager'
        calls:
            - [setContainer, ['@Psr\Container\ContainerInterface']]
        tags:
            - { name: enhavo_api.endpoint }
            - { name: container.service_subscriber }

    Enhavo\Bundle\ArticleBundle\Endpoint\ArticleListEndpointType:
        arguments:
            - '@enhavo_article.article.repository'
        calls:
            - [setContainer, ['@Psr\Container\ContainerInterface']]
        tags:
            - { name: enhavo_api.endpoint }
            - { name: container.service_subscriber }

    Enhavo\Bundle\ArticleBundle\Controller\ArticleController:
        arguments:
            - '@Enhavo\Component\Type\FactoryInterface[Endpoint]'
        calls:
            - [setContainer, ['@Psr\Container\ContainerInterface']]
        tags:
            - { name: controller.service_arguments }
            - { name: container.service_subscriber }